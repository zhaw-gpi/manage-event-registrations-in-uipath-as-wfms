<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.UiPathEventObjectId="1877abee59b23e05" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System.Net.Mail" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System.Text.RegularExpressions" xmlns:this="clr-namespace:" xmlns:uda="clr-namespace:UiPath.DataService.Activities;assembly=UiPath.DataService.Activities.Core" xmlns:udam="clr-namespace:UiPath.DataService.Activities.Models;assembly=UiPath.DataService.Activities.Core" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:um="clr-namespace:UiPath.Mail;assembly=UiPath.Mail.Activities" xmlns:umab="clr-namespace:UiPath.Mail.Activities.Business;assembly=UiPath.Mail.Activities" xmlns:umabh="clr-namespace:UiPath.Mail.Activities.Business.HtmlEditor;assembly=UiPath.Mail.Activities" xmlns:upaf="clr-namespace:UiPath.Persistence.Activities.FormTask;assembly=UiPath.Persistence.Activities" xmlns:upat="clr-namespace:UiPath.Persistence.Activities.Tasks;assembly=UiPath.Persistence.Activities" xmlns:v="clr-namespace:Verarbeitung_von_Event_Anmeldungen;assembly=DataService.Verarbeitung_von_Event_Anmeldungen" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="UiPathEventObjectId" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1219,2694</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail.Activities.Business</x:String>
      <x:String>UiPath.Mail.Activities.Business.ForEachMail</x:String>
      <x:String>UiPath.Mail.Activities.Outlook</x:String>
      <x:String>UiPath.Mail.Activities.Triggers</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Outlook.Enums</x:String>
      <x:String>UiPath.Platform.Triggers</x:String>
      <x:String>UiPath.Platform.Triggers.Scope</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>UiPath.Activities.System.Arrays</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataService.Activities</x:String>
      <x:String>UiPath.DataService.Definition</x:String>
      <x:String>UiPath.DataService.Activities.Models</x:String>
      <x:String>Verarbeitung_von_Event_Anmeldungen</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Persistence.Activities.Model.Task</x:String>
      <x:String>UiPath.Persistence.Activities.FormTask</x:String>
      <x:String>UiPath.Persistence.Activities.BaseTask</x:String>
      <x:String>UiPath.Persistence.Activities</x:String>
      <x:String>UiPath.Mail.Activities.Utils</x:String>
      <x:String>UiPath.Mail.Activities.Business.HtmlEditor</x:String>
      <x:String>UiPath.Persistence.Activities.Tasks</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>UiPath.DataService.Activities.Core</AssemblyReference>
      <AssemblyReference>UiPath.DataService.Definition</AssemblyReference>
      <AssemblyReference>DataService.Verarbeitung_von_Event_Anmeldungen</AssemblyReference>
      <AssemblyReference>UiPath.Persistence.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="614,2629" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="upaf:FormTaskData" Name="taskObjectCrm" />
      <Variable x:TypeArguments="x:Boolean" Name="acceptRegistration">
        <Variable.Default>
          <Literal x:TypeArguments="x:Boolean" Value="True" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="humanRemarks" />
      <Variable x:TypeArguments="x:String" Name="anrede" />
      <Variable x:TypeArguments="x:String" Name="vorname" />
      <Variable x:TypeArguments="x:String" Name="nachname" />
      <Variable x:TypeArguments="x:String" Name="bemerkungen" />
      <Variable x:TypeArguments="x:String" Name="eventBezeichnung" />
      <Variable x:TypeArguments="x:String" Name="crmUpdateProblems" />
      <Variable x:TypeArguments="upaf:FormTaskData" Name="taskObjectCrmUpdated" />
      <Variable x:TypeArguments="x:String" Name="eventManagerMail" />
      <Variable x:TypeArguments="x:Double" Default="0" Name="eventFee" />
      <Variable x:TypeArguments="x:String" Name="mailAddress" />
      <Variable x:TypeArguments="x:String" Name="mailSubject" />
      <Variable x:TypeArguments="x:String" Name="mailBody" />
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="humanNeeded" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <umab:GmailApplicationCard Account="vqsuda@gmail.com" ConnectionAccountName="vqsuda Connection" ConnectionId="ed56abb2-02db-43fd-98da-f465fcc163e9" DisplayName="E-Mail herunterladen &amp; als gelesen markieren" EmailAddress="vqsuda@gmail.com" sap:VirtualizedContainerService.HintSize="572,79" sap2010:WorkflowViewState.IdRef="GmailApplicationCard_3" Timeout="90" UseConnectionService="True">
      <umab:GmailApplicationCard.Body>
        <ActivityAction x:TypeArguments="um:IMailQuickHandle">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="um:IMailQuickHandle" Name="Gmail" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="476,693" sap2010:WorkflowViewState.IdRef="Sequence_25">
            <Sequence.Variables>
              <Variable x:TypeArguments="snm:MailMessage" Name="newMail" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <umab:GetEmailById Account="[Gmail]" DisplayName="Get Email By Id" EmailId="[UiPathEventObjectId]" sap:VirtualizedContainerService.HintSize="434,189" sap2010:WorkflowViewState.IdRef="GetEmailById_1" Result="[newMail]" />
            <umab:MarkMailAsReadX DisplayName="Mark Email As Read/Unread" sap:VirtualizedContainerService.HintSize="434,134" sap2010:WorkflowViewState.IdRef="MarkMailAsReadX_2" MailMessage="[newMail]" MarkAs="Read" />
            <Assign sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_21">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[mailSubject]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[newMail.Subject]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_22">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[mailBody]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[newMail.Body]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ActivityAction>
      </umab:GmailApplicationCard.Body>
      <umab:GmailApplicationCard.ClientId>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </umab:GmailApplicationCard.ClientId>
      <umab:GmailApplicationCard.ClientSecret>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </umab:GmailApplicationCard.ClientSecret>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </umab:GmailApplicationCard>
    <Sequence sap2010:Annotation.AnnotationText="Event-Bezeichnung, Anrede, Vorname, Nachname, Mail-Adresse und Bemerkungen" DisplayName="Informationen aus E-Mail extrahieren" sap:VirtualizedContainerService.HintSize="572,123" sap2010:WorkflowViewState.IdRef="Sequence_27">
      <Sequence.Variables>
        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="regExMatches" />
        <Variable x:TypeArguments="str:Match" Name="firstMatch" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="Event-Bezeichnung auslesen" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_10">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[eventBezeichnung]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[mailSubject.Split(" |")(0)]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:Matches FirstMatch="{x:Null}" DisplayName="Via RegEx-Pattern Mail-Inhalt auslesen" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Matches_2" Input="[mailBody]" IsBuilderTabModified="False" Pattern="Anrede\s*(.*)Vorname\s*(.*)Nachname\s*(.*)E-Mail\s*(.*)&lt;.*Bemerkungen\s*(.*)" RegexOption="IgnoreCase, Compiled, Singleline" Result="[regExMatches]" />
      <Assign DisplayName="Ersten Treffer des Patterns zwischenspeichern" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_9">
        <Assign.To>
          <OutArgument x:TypeArguments="str:Match">[firstMatch]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="str:Match">[regExMatches.First]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:MultipleAssign DisplayName="Jede Gruppe des Patterns in eigene Variable speichern" sap:VirtualizedContainerService.HintSize="434,225" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[anrede]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[firstMatch.Groups(1).ToString.Trim]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[vorname]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[firstMatch.Groups(2).ToString.Trim]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[nachname]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[firstMatch.Groups(3).ToString.Trim]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[mailAddress]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[firstMatch.Groups(4).ToString.Trim]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[bemerkungen]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[firstMatch.Groups(5).ToString.Trim]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
      </ui:MultipleAssign>
      <Assign DisplayName="Falls Bemerkungen vorhanden, ist manuelle Bearbeitung erforderlich" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_24">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Boolean">[humanNeeded]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Boolean">[bemerkungen.Length &gt; 0]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Mail-Adresse der Eventmanager:in und Teilnahmegebühr des Events auslesen. [Auf Fehlerbehandlung (mehr als ein Treffer oder kein Treffer) verzichtet]" DisplayName="Informationen zur Veranstaltung auslesen" sap:VirtualizedContainerService.HintSize="572,138" sap2010:WorkflowViewState.IdRef="Sequence_31">
      <Sequence.Variables>
        <Variable x:TypeArguments="scg:IList(v:ZHAWEvent)" Name="foundEvents" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <uda:QueryEntityRecords x:TypeArguments="v:ZHAWEvent" TotalRecords="{x:Null}" ContinueOnError="False" DisplayName="Query ZHAWEvent Records" EntityId="119c3005-a5d6-ed11-9f73-0022489f9dfa" ExpansionDepth="2" sap:VirtualizedContainerService.HintSize="434,140" sap2010:WorkflowViewState.IdRef="QueryEntityRecords`1_4" OutputRecords="[foundEvents]" QueriedEntityId="119c3005-a5d6-ed11-9f73-0022489f9dfa" Skip="0" SortAscending="True" SortByField="Id" TimeoutInMs="30000" Top="100">
        <uda:QueryEntityRecords.FilterArguments>
          <uda:FilterArgument FilterActivityType="{x:Null}">
            <uda:FilterArgument.Filter>
              <uda:GroupFilter Index="0" Operator="AND">
                <uda:GroupFilter.Filters>
                  <scg:List x:TypeArguments="uda:SimpleFilter" Capacity="4">
                    <uda:SimpleFilter ExpressionValue="{x:Null}" FieldName="Name" FieldType="UiPath.DataService.Core.Models.EntityField" Operator="startswith" ValueIndex="0" />
                  </scg:List>
                </uda:GroupFilter.Filters>
                <uda:GroupFilter.Groups>
                  <scg:List x:TypeArguments="uda:GroupFilter" Capacity="0" />
                </uda:GroupFilter.Groups>
              </uda:GroupFilter>
            </uda:FilterArgument.Filter>
          </uda:FilterArgument>
        </uda:QueryEntityRecords.FilterArguments>
        <uda:QueryEntityRecords.FilterValues>
          <scg:List x:TypeArguments="InArgument" Capacity="4">
            <InArgument x:TypeArguments="x:String">[eventBezeichnung]</InArgument>
          </scg:List>
        </uda:QueryEntityRecords.FilterValues>
      </uda:QueryEntityRecords>
      <Assign sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_17">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[eventManagerMail]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[foundEvents(0).EventManagerin]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_18">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Double">[eventFee]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Double">[Double.Parse(foundEvents(0).EventFee.ToString)]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Falls E-Mail-Adresse bisher nicht vorhanden: Person im CRM neu hinzufügen und Veranstaltung zuweisen&#xA;Falls E-Mail-Adresse genau einmal vorhanden sowie mit Vor-/Nachname übereinstimmend: Veranstaltung zuweisen&#xA;In allen anderen Fällen: Manuelle Bearbeitung erforderlich" DisplayName="Anmeldung mit CRM abgleichen" sap:VirtualizedContainerService.HintSize="572,168" sap2010:WorkflowViewState.IdRef="Sequence_9">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Int64" Name="countFoundPersons" />
        <Variable x:TypeArguments="scg:IList(v:CRMPerson)" Name="listFoundPersons" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <uda:QueryEntityRecords x:TypeArguments="v:CRMPerson" ContinueOnError="False" DisplayName="Query CRMPerson Records" EntityId="f5d74770-a8d6-ed11-9f73-0022489f9dfa" ExpansionDepth="2" sap:VirtualizedContainerService.HintSize="661,140" sap2010:WorkflowViewState.IdRef="QueryEntityRecords`1_2" OutputRecords="[listFoundPersons]" QueriedEntityId="f5d74770-a8d6-ed11-9f73-0022489f9dfa" Skip="0" SortAscending="True" SortByField="Id" TimeoutInMs="30000" Top="100" TotalRecords="[countFoundPersons]">
        <uda:QueryEntityRecords.FilterArguments>
          <uda:FilterArgument FilterActivityType="{x:Null}">
            <uda:FilterArgument.Filter>
              <uda:GroupFilter Index="0" Operator="AND">
                <uda:GroupFilter.Filters>
                  <scg:List x:TypeArguments="uda:SimpleFilter" Capacity="4">
                    <uda:SimpleFilter ExpressionValue="{x:Null}" FieldName="EMail" FieldType="UiPath.DataService.Core.Models.EntityField" Operator="=" ValueIndex="0" />
                  </scg:List>
                </uda:GroupFilter.Filters>
                <uda:GroupFilter.Groups>
                  <scg:List x:TypeArguments="uda:GroupFilter" Capacity="0" />
                </uda:GroupFilter.Groups>
              </uda:GroupFilter>
            </uda:FilterArgument.Filter>
          </uda:FilterArgument>
        </uda:QueryEntityRecords.FilterArguments>
        <uda:QueryEntityRecords.FilterValues>
          <scg:List x:TypeArguments="InArgument" Capacity="4">
            <InArgument x:TypeArguments="x:String">[mailAddress]</InArgument>
          </scg:List>
        </uda:QueryEntityRecords.FilterValues>
      </uda:QueryEntityRecords>
      <ui:IfElseIf DisplayName="Else If in Abhängigkeit der Anzahl gefundener Personen" sap:VirtualizedContainerService.HintSize="661,1679" sap2010:WorkflowViewState.IdRef="IfElseIf_1">
        <ui:IfElseIf.ConditionBlocks>
          <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
            <ui:IfElseIfBlock BlockType="If" Condition="[countFoundPersons.Equals(0)]">
              <ui:IfElseIfBlock.Then>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="492,576" sap2010:WorkflowViewState.IdRef="Sequence_37">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Person bisher nicht vorhanden =&gt; erfassen inkl. Veranstaltung" sap:VirtualizedContainerService.HintSize="450,488" sap2010:WorkflowViewState.IdRef="Sequence_39">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <uda:CreateEntityRecord x:TypeArguments="v:CRMPerson" InputEntity="{x:Null}" OutputEntity="{x:Null}" VisibleDynamicPropertiesInfo="{x:Null}" ContinueOnError="False" DisplayName="Create CRMPerson Record" EntityId="f5d74770-a8d6-ed11-9f73-0022489f9dfa" ExpansionDepth="2" sap:VirtualizedContainerService.HintSize="388,377" sap2010:WorkflowViewState.IdRef="CreateEntityRecord`1_3" InputEntityInFieldView="[new Verarbeitung_von_Event_Anmeldungen.CRMPerson() With {  .EMail = mailAddress,  .Firstname = vorname,  .Surname = nachname,  .Title = anrede,  .RegisteredEvents = eventBezeichnung }]" IsInRecordView="False" TimeoutInMs="30000">
                      <uda:CreateEntityRecord.State>
                        <udam:RecordState RequiredFieldCount="4">
                          <udam:RecordState.SelectedFields>
                            <scg:List x:TypeArguments="udam:DynamicEntityField" Capacity="5">
                              <udam:DynamicEntityField Id="335c278f-a8d6-ed11-9f73-0022489f9dfa" IsRequired="True" Name="EMail">
                                <udam:DynamicEntityField.ArgumentValue>
                                  <InArgument x:TypeArguments="x:String">[mailAddress]</InArgument>
                                </udam:DynamicEntityField.ArgumentValue>
                              </udam:DynamicEntityField>
                              <udam:DynamicEntityField Id="ccc191a0-a8d6-ed11-9f73-0022489f9dfa" IsRequired="True" Name="Firstname">
                                <udam:DynamicEntityField.ArgumentValue>
                                  <InArgument x:TypeArguments="x:String">[vorname]</InArgument>
                                </udam:DynamicEntityField.ArgumentValue>
                              </udam:DynamicEntityField>
                              <udam:DynamicEntityField Id="cdc191a0-a8d6-ed11-9f73-0022489f9dfa" IsRequired="True" Name="Surname">
                                <udam:DynamicEntityField.ArgumentValue>
                                  <InArgument x:TypeArguments="x:String">[nachname]</InArgument>
                                </udam:DynamicEntityField.ArgumentValue>
                              </udam:DynamicEntityField>
                              <udam:DynamicEntityField Id="af14e9a9-a8d6-ed11-9f73-0022489f9dfa" IsRequired="True" Name="Title">
                                <udam:DynamicEntityField.ArgumentValue>
                                  <InArgument x:TypeArguments="x:String">[anrede]</InArgument>
                                </udam:DynamicEntityField.ArgumentValue>
                              </udam:DynamicEntityField>
                              <udam:DynamicEntityField Id="08969bc5-a8d6-ed11-9f73-0022489f9dfa" Name="RegisteredEvents">
                                <udam:DynamicEntityField.ArgumentValue>
                                  <InArgument x:TypeArguments="x:String">[eventBezeichnung]</InArgument>
                                </udam:DynamicEntityField.ArgumentValue>
                              </udam:DynamicEntityField>
                            </scg:List>
                          </udam:RecordState.SelectedFields>
                        </udam:RecordState>
                      </uda:CreateEntityRecord.State>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </uda:CreateEntityRecord>
                  </Sequence>
                </Sequence>
              </ui:IfElseIfBlock.Then>
            </ui:IfElseIfBlock>
            <ui:IfElseIfBlock BlockType="ElseIf" Condition="[countFoundPersons &gt; 1]">
              <ui:IfElseIfBlock.Then>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="492,169" sap2010:WorkflowViewState.IdRef="Sequence_38">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Mehr als eine Person gefunden mit E-Mail =&gt; manuelle Bearbeitung" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_43">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_23">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[humanNeeded]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_11">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[crmUpdateProblems]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">["Es gibt im CRM mehr als eine Person mit der E-Mail " + mailAddress]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </Sequence>
              </ui:IfElseIfBlock.Then>
            </ui:IfElseIfBlock>
            <ui:IfElseIfBlock BlockType="Else">
              <ui:IfElseIfBlock.Then>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="610,576" sap2010:WorkflowViewState.IdRef="Sequence_42">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[listFoundPersons(0).Firstname.StartsWith(vorname) AND listFoundPersons(0).Surname.Equals(nachname) = true]" DisplayName="Vor- &amp; Nachname der einen gefundenen Person übereinstimmend mit Anmeldeinformationen?" sap:VirtualizedContainerService.HintSize="568,488" sap2010:WorkflowViewState.IdRef="If_5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="492,169" sap2010:WorkflowViewState.IdRef="Sequence_17">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence DisplayName="Ja =&gt; Veranstaltung erfassen" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_40">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <uda:UpdateEntityRecord x:TypeArguments="v:CRMPerson" InputEntity="{x:Null}" OutputEntity="{x:Null}" VisibleDynamicPropertiesInfo="{x:Null}" ContinueOnError="False" DisplayName="Update CRMPerson Record" EntityId="f5d74770-a8d6-ed11-9f73-0022489f9dfa" ExpansionDepth="2" sap:VirtualizedContainerService.HintSize="388,224" sap2010:WorkflowViewState.IdRef="UpdateEntityRecord`1_2" InputEntityInFieldView="[new Verarbeitung_von_Event_Anmeldungen.CRMPerson() With {  .RegisteredEvents = If(IsNothing(listFoundPersons(0).RegisteredEvents), eventBezeichnung, listFoundPersons(0).RegisteredEvents + eventBezeichnung), .Id = listFoundPersons(0).Id }]" IsInRecordView="False" RecordId="[listFoundPersons(0).Id]" TimeoutInMs="30000">
                            <uda:UpdateEntityRecord.State>
                              <udam:RecordState RequiredFieldCount="4">
                                <udam:RecordState.SelectedFields>
                                  <scg:List x:TypeArguments="udam:DynamicEntityField" Capacity="1">
                                    <udam:DynamicEntityField Id="08969bc5-a8d6-ed11-9f73-0022489f9dfa" Name="RegisteredEvents">
                                      <udam:DynamicEntityField.ArgumentValue>
                                        <InArgument x:TypeArguments="x:String">[If(IsNothing(listFoundPersons(0).RegisteredEvents), eventBezeichnung, listFoundPersons(0).RegisteredEvents + eventBezeichnung)]</InArgument>
                                      </udam:DynamicEntityField.ArgumentValue>
                                    </udam:DynamicEntityField>
                                  </scg:List>
                                </udam:RecordState.SelectedFields>
                              </udam:RecordState>
                            </uda:UpdateEntityRecord.State>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </uda:UpdateEntityRecord>
                        </Sequence>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="492,169" sap2010:WorkflowViewState.IdRef="Sequence_18">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence DisplayName="Nein =&gt; Manuelle Bearbeitung " sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_41">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_16">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[humanNeeded]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_12">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[crmUpdateProblems]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">["Name und Vorname aus dem Anmeldeformular passen nicht zu den Angaben im CRM zur Person mit der E-Mail " + mailAddress]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </ui:IfElseIfBlock.Then>
            </ui:IfElseIfBlock>
          </sc:BindingList>
        </ui:IfElseIf.ConditionBlocks>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:IfElseIf>
    </Sequence>
    <If sap2010:Annotation.AnnotationText="Falls Bemerkungen vorhanden und/oder automatischer CRM-Abgleich fehlgeschlagen, ist eine manuelle Bearbeitung durch Event-Manager:in erforderlich" Condition="[humanNeeded]" DisplayName="Manuelle Bearbeitung erforderlich? -&gt; Ja" sap:VirtualizedContainerService.HintSize="572,1590" sap2010:WorkflowViewState.IdRef="If_7">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="538,1398" sap2010:WorkflowViewState.IdRef="Sequence_28">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="taskSubject" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Human Workflow-Teil" sap:VirtualizedContainerService.HintSize="496,1310" sap2010:WorkflowViewState.IdRef="Sequence_30">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[taskSubject]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[eventBezeichnung + " " + mailAddress +": Manuelle Bearbeitung erforderlich"]</InArgument>
              </Assign.Value>
            </Assign>
            <upaf:CreateFormTask BucketFolderPath="{x:Null}" BucketName="{x:Null}" BulkFormLayout="{x:Null}" DynamicFormPath="{x:Null}" ExternalTag="{x:Null}" Labels="{x:Null}" TaskCatalog="{x:Null}" TimeoutMs="{x:Null}" BulkFormLayoutGuid="468e54b6-b173-4111-844c-30b37b127b9d" DisplayName="Aufgabe für manuellen Abgleich erstellen" EnableBulkEdit="False" EnableDynamicForms="False" FormLayout="%[{&quot;label&quot;:&quot;E-Mail&quot;,&quot;disabled&quot;:true,&quot;tableView&quot;:true,&quot;key&quot;:&quot;inEmail&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true},{&quot;label&quot;:&quot;Vorname&quot;,&quot;disabled&quot;:true,&quot;tableView&quot;:true,&quot;key&quot;:&quot;inFirstname&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true},{&quot;label&quot;:&quot;Nachname&quot;,&quot;disabled&quot;:true,&quot;tableView&quot;:true,&quot;key&quot;:&quot;inSurname&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true},{&quot;label&quot;:&quot;Bemerkungen der anmeldenden Person&quot;,&quot;disabled&quot;:true,&quot;tableView&quot;:true,&quot;key&quot;:&quot;inBemerkungen&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true},{&quot;label&quot;:&quot;Allfällige Probleme bei automatischem CRM-Abgleich&quot;,&quot;disabled&quot;:true,&quot;tableView&quot;:true,&quot;key&quot;:&quot;inProblemExplanation&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true},{&quot;label&quot;:&quot;Anmeldung bestätigen?&quot;,&quot;tableView&quot;:true,&quot;key&quot;:&quot;outAcceptRegistration&quot;,&quot;type&quot;:&quot;checkbox&quot;,&quot;input&quot;:true,&quot;defaultValue&quot;:true},{&quot;label&quot;:&quot;Bemerkungen&quot;,&quot;description&quot;:&quot;Zum Beispiel Begründung einer Ablehnung oder Reaktion auf die Bemerkungen der anmeldenden Person&quot;,&quot;tableView&quot;:true,&quot;key&quot;:&quot;outHumanRemarks&quot;,&quot;type&quot;:&quot;textarea&quot;,&quot;input&quot;:true},{&quot;mask&quot;:false,&quot;customClass&quot;:&quot;uipath-button-container&quot;,&quot;tableView&quot;:true,&quot;alwaysEnabled&quot;:false,&quot;type&quot;:&quot;table&quot;,&quot;input&quot;:false,&quot;key&quot;:&quot;key&quot;,&quot;label&quot;:&quot;label&quot;,&quot;rows&quot;:[[{&quot;components&quot;:[{&quot;label&quot;:&quot;Übermitteln&quot;,&quot;disableOnInvalid&quot;:true,&quot;tableView&quot;:true,&quot;key&quot;:&quot;submit&quot;,&quot;custom&quot;:&quot;instance.emit('executeDoBlock', instance.component);&quot;,&quot;type&quot;:&quot;button&quot;,&quot;input&quot;:true,&quot;alwaysEnabled&quot;:false,&quot;isResetData&quot;:false}]},{&quot;components&quot;:[]},{&quot;components&quot;:[]},{&quot;components&quot;:[]},{&quot;components&quot;:[]},{&quot;components&quot;:[]}]],&quot;numRows&quot;:1,&quot;numCols&quot;:6,&quot;reorder&quot;:false}]" FormLayoutGuid="58e24c12-1572-4d81-b258-777366eefa34" GenerateInputFields="True" sap:VirtualizedContainerService.HintSize="434,373" sap2010:WorkflowViewState.IdRef="CreateFormTask_1" TaskOutput="[taskObjectCrm]" TaskPriority="[TaskPriority.Medium]" TaskTitle="[taskSubject]">
              <upaf:CreateFormTask.FormData>
                <InArgument x:TypeArguments="x:String" x:Key="inEmail">[mailAddress]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="inFirstname">[vorname]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="inSurname">[nachname]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="inBemerkungen">[bemerkungen]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="inProblemExplanation">[crmUpdateProblems]</InArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="outAcceptRegistration">[acceptRegistration]</OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="outHumanRemarks">[humanRemarks]</OutArgument>
              </upaf:CreateFormTask.FormData>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </upaf:CreateFormTask>
            <upat:AssignTasks FailedTaskAssignments="{x:Null}" TaskUserAssignments="{x:Null}" TimeoutMs="{x:Null}" DisplayName="Aufgabe an Event-Manager:in zuweisen" EnableMultipleAssignments="False" sap:VirtualizedContainerService.HintSize="434,282" sap2010:WorkflowViewState.IdRef="AssignTasks_1" MigrateV144="False" TaskAssignmentType="[TaskAssignmentType.Assign]" TaskId="[Long.Parse(taskObjectCrm.Id.ToString)]" UserNameOrEmail="[eventManagerMail]" />
            <umab:GmailApplicationCard Account="vqsuda@gmail.com" ConnectionAccountName="vqsuda Connection" ConnectionId="ed56abb2-02db-43fd-98da-f465fcc163e9" DisplayName="Aufgaben-Link per Mail senden" EmailAddress="vqsuda@gmail.com" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="GmailApplicationCard_6" Timeout="90" UseConnectionService="True">
              <umab:GmailApplicationCard.Body>
                <ActivityAction x:TypeArguments="um:IMailQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="um:IMailQuickHandle" Name="Gmail" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="476,456" sap2010:WorkflowViewState.IdRef="Sequence_19">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <umab:SendMailX Bcc="{x:Null}" Cc="{x:Null}" HtmlBodyFromText="{x:Null}" ReplyTo="{x:Null}" Account="[Gmail]" Body="[&quot;Bitte bearbeite die folgende Aufgabe: &quot; +taskObjectCrm.ActionUrl]" BodyType="Text" DisplayName="Send Email" sap:VirtualizedContainerService.HintSize="434,368" sap2010:WorkflowViewState.IdRef="SendMailX_1" Importance="Normal" IsDraft="False" MaxBodyDocumentSizeMB="2" Sensitivity="Normal" Subject="[taskSubject]" To="[eventManagerMail]" UseDocumentAsBody="False">
                      <umab:SendMailX.Files>
                        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                      </umab:SendMailX.Files>
                      <umab:SendMailX.HtmlBodyFromFile>
                        <umabh:HtmlContentArgument FilePath="{x:Null}">
                          <umabh:HtmlContentArgument.RuntimeImages>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                          </umabh:HtmlContentArgument.RuntimeImages>
                          <umabh:HtmlContentArgument.ValueMappings>
                            <scg:List x:TypeArguments="umabh:HtmlValueMappingBase" Capacity="0" />
                          </umabh:HtmlContentArgument.ValueMappings>
                        </umabh:HtmlContentArgument>
                      </umab:SendMailX.HtmlBodyFromFile>
                    </umab:SendMailX>
                  </Sequence>
                </ActivityAction>
              </umab:GmailApplicationCard.Body>
              <umab:GmailApplicationCard.ClientId>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </umab:GmailApplicationCard.ClientId>
              <umab:GmailApplicationCard.ClientSecret>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </umab:GmailApplicationCard.ClientSecret>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </umab:GmailApplicationCard>
            <upaf:WaitForFormTaskAndResume StatusMessage="{x:Null}" TaskAction="{x:Null}" TimeoutMs="{x:Null}" WaitItemDataObject="{x:Null}" DisplayName="Aufgabe erledigt" sap:VirtualizedContainerService.HintSize="434,222" sap2010:WorkflowViewState.IdRef="WaitForFormTaskAndResume_1" TaskInput="[taskObjectCrm]" TaskOutput="[taskObjectCrmUpdated]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </upaf:WaitForFormTaskAndResume>
          </Sequence>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_29">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
    <If sap2010:Annotation.AnnotationText="Bei neuen Personen müssten diese natürlich zunächst einmal auch in SAP erfasst werden als Debitor..." Condition="[acceptRegistration AndAlso eventFee&gt;0]" DisplayName="Anmeldung bestätigt und Gebühr &gt; 0 Fr.? -&gt; Ja" sap:VirtualizedContainerService.HintSize="572,124" sap2010:WorkflowViewState.IdRef="If_8">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="492,641" sap2010:WorkflowViewState.IdRef="Sequence_35">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Rechnung als Entwurf erfassen" sap:VirtualizedContainerService.HintSize="450,553" sap2010:WorkflowViewState.IdRef="Sequence_34">
            <Sequence.Variables>
              <Variable x:TypeArguments="sd:DataTable" Name="dtInvoiceDraft" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:BuildDataTable DataTable="[dtInvoiceDraft]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="388,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Firstname&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Surname&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Amount&quot; msdata:Caption=&quot;&quot; type=&quot;xs:double&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Due&quot; msdata:Caption=&quot;&quot; type=&quot;xs:dateTime&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{vorname,nachname,eventFee.ToString,System.DateTime.Now.AddDays(30).ToShortDateString}]" DataTable="[dtInvoiceDraft]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="388,186" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
            <ui:AppendRange DataTable="[dtInvoiceDraft]" DisplayName="Append Range Workbook" sap:VirtualizedContainerService.HintSize="388,116" sap2010:WorkflowViewState.IdRef="AppendRange_1" SheetName="InvoiceDrafts" WorkbookPath="SAP_Mock.xlsx" />
          </Sequence>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_36" />
      </If.Else>
    </If>
    <umab:GmailApplicationCard Account="vqsuda@gmail.com" ConnectionAccountName="vqsuda@gmail.com" ConnectionId="ed56abb2-02db-43fd-98da-f465fcc163e9" DisplayName="Bestätigung oder Ablehnung senden" EmailAddress="vqsuda@gmail.com" sap:VirtualizedContainerService.HintSize="572,79" sap2010:WorkflowViewState.IdRef="GmailApplicationCard_5" Timeout="90" UseConnectionService="True">
      <umab:GmailApplicationCard.Body>
        <ActivityAction x:TypeArguments="um:IMailQuickHandle">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="um:IMailQuickHandle" Name="Gmail" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="476,704" sap2010:WorkflowViewState.IdRef="Sequence_32">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="finalMailSubject" />
              <Variable x:TypeArguments="x:String" Name="finalMailBody" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_19">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[finalMailSubject]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[If(acceptRegistration, "Anmeldebestätigung", "Anmeldeablehnung") + " für " + eventBezeichnung]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_20">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[finalMailBody]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[If(acceptRegistration,"Sie wurden erfolgreich angemeldet.", "Sie konnten nicht erfolgreich angemeldet werden.") + If(IsNothing(humanRemarks),"",Environment.NewLine + Environment.NewLine + "Das Event-Management hat folgende Bemerkungen angefügt: " + humanRemarks)]</InArgument>
              </Assign.Value>
            </Assign>
            <umab:SendMailX Bcc="{x:Null}" Cc="{x:Null}" HtmlBodyFromText="{x:Null}" ReplyTo="{x:Null}" Account="[Gmail]" Body="[finalMailBody]" BodyType="Text" DisplayName="Send Email" sap:VirtualizedContainerService.HintSize="434,374" sap2010:WorkflowViewState.IdRef="SendMailX_2" Importance="Normal" IsDraft="False" MaxBodyDocumentSizeMB="2" Sensitivity="Normal" Subject="[finalMailSubject]" To="[mailAddress]" UseDocumentAsBody="False">
              <umab:SendMailX.Files>
                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
              </umab:SendMailX.Files>
              <umab:SendMailX.HtmlBodyFromFile>
                <umabh:HtmlContentArgument FilePath="{x:Null}">
                  <umabh:HtmlContentArgument.RuntimeImages>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </umabh:HtmlContentArgument.RuntimeImages>
                  <umabh:HtmlContentArgument.ValueMappings>
                    <scg:List x:TypeArguments="umabh:HtmlValueMappingBase" Capacity="0" />
                  </umabh:HtmlContentArgument.ValueMappings>
                </umabh:HtmlContentArgument>
              </umab:SendMailX.HtmlBodyFromFile>
            </umab:SendMailX>
          </Sequence>
        </ActivityAction>
      </umab:GmailApplicationCard.Body>
      <umab:GmailApplicationCard.ClientId>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </umab:GmailApplicationCard.ClientId>
      <umab:GmailApplicationCard.ClientSecret>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </umab:GmailApplicationCard.ClientSecret>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </umab:GmailApplicationCard>
  </Sequence>
</Activity>